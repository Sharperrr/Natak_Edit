# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Natak API - Build and Deploy

on:
  push:
    branches: ["main", "dev"]

env:
  AZURE_WEBAPP_PACKAGE_PATH: "publish"
  ARTIFACT_NAME: "publish-artifact"
  ARTIFACT_PATH: "./artifact"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./Natak

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Test
        run: dotnet test --verbosity normal

  publish:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./Natak

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build (Release)
        run: dotnet build ./Natak.sln -c Release

      - name: Publish the project
        run: dotnet publish ./Natak.API/Natak.API.csproj --no-build -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: "Natak/${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"

  deploy:
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Create directory for artifact
        run: mkdir -p ${{ env.ARTIFACT_PATH }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to dev
        if: github.ref == 'refs/heads/dev'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_DEV_WEB_APP_NAME }}
          publish-profile: ${{ secrets.AZURE_DEV_PUBLISH_PROFILE }}
          package: ${{ env.ARTIFACT_PATH }}

      - name: Deploy to prod
        if: github.ref == 'refs/heads/main'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_PROD_WEB_APP_NAME }}
          publish-profile: ${{ secrets.AZURE_PROD_PUBLISH_PROFILE }}
          package: ${{ env.ARTIFACT_PATH }}

      - name: Logout
        run: |
          az logout
